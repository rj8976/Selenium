<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-UTV5KOM" failures="1" tests="7" name="Default test" time="2.048" errors="0" timestamp="2022-04-13T20:49:33 IST">
  <testcase classname="testNg.DataOHM" name="@BeforeTest beforetest" time="1.924">
    <failure type="org.openqa.selenium.WebDriverException" message="unknown error: cannot determine loading status
from disconnected: unable to send message to renderer
  (Session info: chrome=100.0.4896.88)
Build info: version: &amp;apos;4.1.3&amp;apos;, revision: &amp;apos;7b1ebf28ef&amp;apos;
System info: host: &amp;apos;DESKTOP-UTV5KOM&amp;apos;, ip: &amp;apos;192.168.0.108&amp;apos;, os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;17.0.2&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [9a60ae78756c8533eecde32cafbe15b0, get {url=https://opensource-demo.orangehrmlive.com/}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 100.0.4896.88, chrome: {chromedriverVersion: 99.0.4844.51 (d537ec02474b5..., userDataDir: C:\Users\rs976\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:50888}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50888/devtoo..., se:cdpVersion: 100.0.4896.88, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 9a60ae78756c8533eecde32cafbe15b0">
      <![CDATA[org.openqa.selenium.WebDriverException: unknown error: cannot determine loading status
from disconnected: unable to send message to renderer
  (Session info: chrome=100.0.4896.88)
Build info: version: '4.1.3', revision: '7b1ebf28ef'
System info: host: 'DESKTOP-UTV5KOM', ip: '192.168.0.108', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [9a60ae78756c8533eecde32cafbe15b0, get {url=https://opensource-demo.orangehrmlive.com/}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 100.0.4896.88, chrome: {chromedriverVersion: 99.0.4844.51 (d537ec02474b5..., userDataDir: C:\Users\rs976\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:50888}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50888/devtoo..., se:cdpVersion: 100.0.4896.88, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 9a60ae78756c8533eecde32cafbe15b0
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:330)
at testNg.DataOHM.beforetest(DataOHM.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:637)
at org.testng.TestRunner.beforeRun(TestRunner.java:627)
at org.testng.TestRunner.run(TestRunner.java:589)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeTest beforetest -->
  <testcase classname="testNg.DemoAnnotation" name="@BeforeTest beforeTest" time="-1.649863172956E9">
    <skipped/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="testNg.DemoAnnotation" name="@BeforeClass beforeClass" time="-1.649863173007E9">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="testNg.DemoAnnotation" name="@BeforeMethod beforeMethod" time="-1.649863173009E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testNg.DemoAnnotation" name="@AfterMethod afterMethod" time="-1.649863173012E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNg.DemoAnnotation" name="@AfterClass afterClass" time="-1.649863173014E9">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="testNg.Annotation" name="@BeforeClass loginProcess" time="-1.649863173015E9">
    <skipped/>
  </testcase> <!-- @BeforeClass loginProcess -->
  <testcase classname="testNg.Annotation" name="@AfterClass logoutProcess" time="-1.649863173042E9">
    <skipped/>
  </testcase> <!-- @AfterClass logoutProcess -->
  <testcase classname="testNg.DataOHM" name="@AfterTest aftertest" time="-1.649863173056E9">
    <skipped/>
  </testcase> <!-- @AfterTest aftertest -->
  <testcase classname="testNg.DemoAnnotation" name="@AfterTest afterTest" time="-1.649863173061E9">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="testNg.DemoAssert" name="assertOrange" time="0.0">
    <skipped/>
  </testcase> <!-- assertOrange -->
  <testcase classname="testNg.DemoProvider" name="f" time="0.0">
    <skipped/>
  </testcase> <!-- f -->
  <testcase classname="testNg.DemoProvider" name="f" time="0.0">
    <skipped/>
  </testcase> <!-- f -->
  <testcase classname="testNg.DemoAnnotation" name="firstTest" time="0.0">
    <skipped/>
  </testcase> <!-- firstTest -->
  <testcase classname="testNg.Annotation" name="myinfo" time="0.0">
    <skipped/>
  </testcase> <!-- myinfo -->
  <testcase classname="testNg.Annotation" name="pim" time="0.0">
    <skipped/>
  </testcase> <!-- pim -->
  <testcase classname="testNg.DataOHM" name="f" time="0.001">
    <failure type="org.testng.internal.reflect.MethodMatcherException" message="
[public void testNg.DataOHM.f(java.lang.Integer,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: f([Parameter{index=0, type=java.lang.Integer, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) Admin,(java.lang.String) admin123]">
      <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void testNg.DataOHM.f(java.lang.Integer,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: f([Parameter{index=0, type=java.lang.Integer, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) Admin,(java.lang.String) admin123]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:43)
at org.testng.internal.Parameters.injectParameters(Parameters.java:914)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:34)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- f -->
</testsuite> <!-- Default test -->
